{
  
    
        "post0": {
            "title": "Smiles scrapper",
            "content": "Airflow scrapper .",
            "url": "https://fawolfmann.github.io/aboutme/2020/03/01/Smiles-Scrapper.html",
            "relUrl": "/2020/03/01/Smiles-Scrapper.html",
            "date": " • Mar 1, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Image classification of wheat plant disease",
            "content": "This was my final project to achieve the title of compute engineer. In this blog i&#39;ll explain how i did it and which tools i used. . In this project i created my own image dataset to work with. Some of the code used is on github . This project was created with the help of INTA Argentinian agriculture institute and received a scholarship of SECyT Argentinian University Technology and Science secretary. . The problem . The problem we pose is the lose of grain on wheat harvest caused by leaf disease. . In the next images we see the kind of leaf disease that are more common in the wheat. . Healthy Mildew Leaf Spot Rust . | | | | . As you can see in the images they are slightly different, with the idea is to classify this images and define if a leaf have a disease. . So now we have defined our problem next we will see wich technic we used. . Convolutions neural networks . For the image classification we will use CNN or Convolutions neural networks. This is not a CNN course but will make a little intro. . CNN Architecture . Image from Google . A CNN basically is made of 2 modules, the first is the convolutional module that is used to create a feature map of an image. It made convolution with the patterns it was trained, in the firsts layers it look for basics patters ass lines or circles but in the deep convolutions it look for more complex patterns as a leg or a face in the case of a CNN trained to classify people. . The second module is the classification module, its a dense layer or fully connected layer that use the feature map as input and give a classification as an output, it trains the connection weights to classify. . This is a very short intro if you want to get a deeper knowleadge of computer vision i recomnend this Standford Course contains the slides and syllabus and the YouTube videos. . Creation of dataset . We create an image dataset crawling image from the web and taking photos in the field. After the images where validated and labeled we got: . Label Amount . Healthy | 113 | . Mildew | 102 | . Leaf Spot | 122 | . Rust | 159 | . This is a small amount of pictures to work with but we handle to generate a good solution . Installation . To the training part I install everything on a server with a Titan X GPU . I used docker with a Tensorflow 2.0 image and run everything on Jupyters notebooks. All the code was build with Keras. . Training of models . In the training steps I made 3 iteration to get the final results. . Iteration 1 . First I used my dataset on transfer learning with several pretrained models, trained with Imagenet, this is easly doit with: . base_model = tf.keras.applications.xception.Xception( input_shape=IMG_SHAPE, include_top=False, weights=&#39;imagenet&#39; ) . Here you have to define the shape of the input usualy 224x224 or 512x512, and define if you want to get the top layer, the clasification module, with all the Imagenet classes. . In this iteration we also used Data augmentation, keras give you a good tool to work with this . image_generator = tf.keras.preprocessing.image.ImageDataGenerator(rescale=1./255, validation_split=0.15, zoom_range=0.4, horizontal_flip=True, rotation_range=90 ) . Here you define the way that keras will augment your images, all the configuration can be fund here . But this iteration wasn&#39;t succesfull, the maximum accuracy achived was 65.8% on the validation dataset, not even the test dataset. So i keep training with diferent ways. . Iteration 2 . So then i think why my model went wrong, and talking with some professor of my university the y told me to look for a base dataset to make the all the full training and i found PlantVillage a very similar dataset, it contains 50.000+ images of plant leaf with and without diseases. . After making the full training with this new dataset, I made the transfer learning with my own dataset. . Unfortunatly i didnt get so much better results. With a maximum of 72.3% of accuracy on validation dataset. . Android app implementation . After we trained successfully a model we convert it with TensorflowLite and created an Android app to use this trained model and make predictions on the device. . Conclusions . At the end of this work i realased that the most time cosuming task was to manipulate the data to make it work with your model. .",
            "url": "https://fawolfmann.github.io/aboutme/2019/12/01/Image-Clasification.html",
            "relUrl": "/2019/12/01/Image-Clasification.html",
            "date": " • Dec 1, 2019"
        }
        
    
  
    
        ,"post2": {
            "title": "Image classification",
            "content": "Image classification of wheat plant disease . This was my final project to achieve the title of compute engineer. In this blog i’ll explain how i did it and which tools i used. . In this project i created my own image dataset to work with. Some of the code used is on github . This project was created with the help of INTA Argentinian agriculture institute and received a scholarship of SECyT Argentinian University Technology and Science secretary. . The problem . The problem we pose is the lose of grain on wheat harvest caused by leaf disease. . In the next images we see the kind of leaf disease that are more common in the wheat. . Healthy Mildew Leaf Spot Rust . | | | | . As you can see in the images they are slightly different, with the idea is to classify this images and define if a leaf have a disease. . So now we have defined our problem next we will see wich technic we used . Convolutions neural networks . For the image classification we will use CNN or Convolutions neural networks. This is not a CNN course but will make a little intro. . CNN Architecture . Image from Google . A CNN basically is made of 2 modules, the first is the convolutional module that is used to create a feature map of an image. It made convolution with the patterns it was trained, in the firsts layers it look for basics patters ass lines or circles but in the deep convolutions it look for more complex patterns as a leg or a face in the case of a CNN trained to classify people. . The second module is the classification module, its a dense layer or fully connected layer that use the feature map as input and give a classification as an output, it trains the connection weights to classify. . This is a very short intro if you want to get a deeper knowleadge of computer vision i recomnend this Standford Course contains the slides and syllabus and the YouTube videos. . Creation of dataset . We create an image dataset crawling image from the web and taking photos in the field. After the images where validated and labeled we got: . Label Amount . Healthy | 113 | . Mildew | 102 | . Leaf Spot | 122 | . Rust | 159 | . This is a small amount of pictures to work with but we handle to generate a good solution . Installation . To the training part i install everything on a server with a Titan X GPU . I used docker with a Tensorflow 2.0 image and run everything on Jupyters notebooks. All the code was build with Keras. . Training of models . In the training steps i made 3 iteration to get the final results. . Iteration 1 . Transfer learning of models trained with IMAGENET. Data augmentation . Iteration 2 . Re-train the models with PlantVillage dataset and after transfer learning with my own data set. . Iteration 3 . Cut my dataset with UEA labeling tool and again transfer learning the network trained with PlantVillage. . Android app implementation . After we trained successfully a model we convert it with TensorflowLite and created an Android app to use this trained model and make predictions on the device. . Conclusions .",
            "url": "https://fawolfmann.github.io/aboutme/2019/12/01/Image-Classification.html",
            "relUrl": "/2019/12/01/Image-Classification.html",
            "date": " • Dec 1, 2019"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "I’m a Computer Engineering passionate about new technologies, developing fasts MVP iterating with the client to achieve best results. Always in research of new tools and experiment with them. . Job Experience . Data engineer @Mutt data . Create ETL process with Apache Airflow scheduler for time series forecasting. | Transform data with Spark using PySpark, consume TB of data to ingress in the pipeline | Deliver results on endpoints APIs on AWS lambda with Golang. | Create Infrastructure over AWS with EC2, RDS and Lambdas | . Mutt data . Data visualization @Avec . Deployed Power BI platform two visualize and create business metrics for car dealership company Tools: . SQL Server | Power BI | . AVEC . SAP DATA ENGINEER @Selentec . Create ETL within SAP BW, form the ERP created dataflow with snowflake schema | Deploy data flows from SAP ERP and showing the results in dashboards | Manage big data within SAP system processing and transform it with ABAP. | . Tools: . SAP BW | ABAP | SQL | . Selentec . Python developer @MuyShopper . Scrap of home appliance websites and dump all the data in SQL database . Tools: . Python | Regex | PostgreSQL | Scrapy | . MuyShopper . IT maintenance @University of Cordoba . Maintenance of Linux based and Windows systems, networks and servers . Tools: . Linux bash | SQL | Computer networks - TCP/IP | . Faculty Computer Lab . Education . Computer engineer . I have done my career on Universidad Nacional de Cordoba, FCEFyN. . My final project was about image classification with convolutional neural network, i talk more about this in this post (link al post) . Entrepreneurial Course . I have done a summer course at Berkley, CA. Developing my skills on entrepreneur, pitching and creating solution for actual problems. Gived by TrepCamp. . Online courses . Data engineer with python . I made the DataCamp career tracks of Data Engineer, Topics Covered: . Python Programming | Importing and Cleaning Data | Data Manipulation with Python | Data Manipulation with Shell | Advanced SQL | Introduction to Spark and PySpark | . Certification . Golang . Golang introduction in Udemy Certification .",
          "url": "https://fawolfmann.github.io/aboutme/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://fawolfmann.github.io/aboutme/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}